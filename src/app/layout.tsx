import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { getUserFromSession, UserSession } from "@/lib/auth";
import { cookies } from "next/headers";
import { Suspense } from "react";
import Navigation from "./components/Navigation";
import { AuthProvider } from "./contexts/AuthContext";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let user: UserSession | null = null;
  const sessionToken = (await cookies()).get("session")?.value;
  if (sessionToken) {
    user = getUserFromSession(sessionToken);
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <AuthProvider initialUser={user}>
          <Suspense fallback={<div>Loading...</div>}>
            <Navigation />
          </Suspense>

          {children}
        </AuthProvider>
      </body>
    </html>
  );
}
